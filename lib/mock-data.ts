// Lines of Business
export const linesOfBusiness = [
  {
    id: "lob-1",
    name: "Retail Banking",
    description: "Consumer banking products and services",
  },
  {
    id: "lob-2",
    name: "Corporate Banking",
    description: "Financial services for corporate clients",
  },
  {
    id: "lob-3",
    name: "Investment Banking",
    description: "Capital markets and advisory services",
  },
  {
    id: "lob-4",
    name: "Asset Management",
    description: "Investment management services",
  },
  {
    id: "lob-5",
    name: "Wealth Management",
    description: "Financial planning and investment management for high-net-worth individuals",
  },
  {
    id: "lob-6",
    name: "Insurance Services",
    description: "Life, health, property, and casualty insurance products",
  },
  {
    id: "lob-7",
    name: "Treasury Services",
    description: "Cash management, trade finance, and liquidity solutions",
  },
  {
    id: "lob-8",
    name: "Merchant Services",
    description: "Payment processing solutions for businesses",
  },
  {
    id: "lob-9",
    name: "Commercial Real Estate",
    description: "Financing and advisory services for commercial properties",
  },
  {
    id: "lob-10",
    name: "Capital Markets",
    description: "Securities underwriting, trading, and brokerage services",
  },
  {
    id: "lob-11",
    name: "Global Markets",
    description: "Trading and risk management across asset classes",
  },
  {
    id: "lob-12",
    name: "Private Banking",
    description: "Personalized financial services for affluent clients",
  },
  {
    id: "lob-13",
    name: "Consumer Lending",
    description: "Personal loans, mortgages, and credit products",
  },
  {
    id: "lob-14",
    name: "Small Business Banking",
    description: "Financial services tailored for small businesses",
  },
  {
    id: "lob-15",
    name: "Digital Banking",
    description: "Online and mobile banking platforms and services",
  },
  {
    id: "lob-16",
    name: "Payments & Transfers",
    description: "Domestic and international payment processing services",
  },
  {
    id: "lob-17",
    name: "Risk Management",
    description: "Financial risk assessment and mitigation services",
  },
  {
    id: "lob-18",
    name: "Custody Services",
    description: "Safekeeping and administration of securities",
  },
  {
    id: "lob-19",
    name: "Fund Administration",
    description: "Administrative services for investment funds",
  },
  {
    id: "lob-20",
    name: "Sustainable Finance",
    description: "Environmental, social, and governance (ESG) focused financial products",
  },
]

// Applications
export const apps = [
  {
    id: "app-1",
    appId: "123345", // Unique application identifier
    name: "Payment Gateway",
    description: "Handles all payment processing for the e-commerce platform",
    lobId: "lob-1", // Line of Business reference
    risk_score: 82,
    certificates: 12,
    keys: 8,
    vulnerabilities: { critical: 1, high: 3, medium: 5, low: 2 },
    hosts: 5,
    last_scan: "2023-05-02T13:45:00Z",
    owner: "John Doe",
    status: "active",
  },
  {
    id: "app-2",
    appId: "234567",
    name: "User Authentication Service",
    description: "Manages user authentication and authorization",
    lobId: "lob-1",
    risk_score: 67,
    certificates: 8,
    keys: 15,
    vulnerabilities: { critical: 0, high: 2, medium: 6, low: 4 },
    hosts: 3,
    last_scan: "2023-05-01T09:30:00Z",
    owner: "Jane Smith",
    status: "active",
  },
  {
    id: "app-3",
    appId: "345678",
    name: "Data Analytics Platform",
    description: "Processes and analyzes user behavior data",
    lobId: "lob-2",
    risk_score: 91,
    certificates: 5,
    keys: 10,
    vulnerabilities: { critical: 2, high: 4, medium: 1, low: 3 },
    hosts: 7,
    last_scan: "2023-05-03T16:20:00Z",
    owner: "Alice Johnson",
    status: "active",
  },
  {
    id: "app-4",
    appId: "456789",
    name: "Content Management System",
    description: "Manages website content and assets",
    lobId: "lob-2",
    risk_score: 74,
    certificates: 7,
    keys: 4,
    vulnerabilities: { critical: 0, high: 1, medium: 4, low: 7 },
    hosts: 2,
    last_scan: "2023-05-02T10:15:00Z",
    owner: "Bob Williams",
    status: "active",
  },
  {
    id: "app-5",
    appId: "567890",
    name: "Inventory Management",
    description: "Tracks and manages product inventory",
    lobId: "lob-3",
    risk_score: 88,
    certificates: 9,
    keys: 6,
    vulnerabilities: { critical: 1, high: 2, medium: 3, low: 5 },
    hosts: 4,
    last_scan: "2023-05-03T14:50:00Z",
    owner: "Charlie Brown",
    status: "active",
  },
  {
    id: "app-6",
    appId: "678901",
    name: "Customer Support Portal",
    description: "Platform for customer support and ticket management",
    lobId: "lob-4",
    risk_score: 59,
    certificates: 6,
    keys: 11,
    vulnerabilities: { critical: 0, high: 0, medium: 8, low: 6 },
    hosts: 3,
    last_scan: "2023-05-01T11:40:00Z",
    owner: "Diana Miller",
    status: "active",
  },
]

// Host/Source Types
export const sourceTypes = {
  VM: "Virtual Machine",
  K8S: "Kubernetes Pod",
  CF: "Cloud Foundry Container",
  AWS: "AWS Service",
  GCP: "GCP Service",
  AZURE: "Azure Service",
  API: "API Source",
  CUSTOM: "Custom Source",
}

// Hosts/Sources
export const hosts = [
  {
    id: "host-1",
    name: "prod-api-01",
    hostname: "prod-api-01.example.com",
    type: sourceTypes.VM,
    sourceType: "VM",
    platform: "VMware",
    os: "Ubuntu 20.04 LTS",
    ip: "10.0.1.5",
    certificates: 4,
    keys: 3,
    apps: ["app-1", "app-2"],
    appIds: ["123345", "234567"],
    vulnerabilities: { critical: 1, high: 2, medium: 1, low: 0 },
    environment: "production",
    isExpired: false,
    region: "us-east-1",
    lastUpdated: "2023-05-01T10:30:00Z",
  },
  {
    id: "host-2",
    name: "prod-web-01",
    hostname: "prod-web-01.example.com",
    type: sourceTypes.VM,
    sourceType: "VM",
    platform: "VMware",
    os: "CentOS 8",
    ip: "10.0.1.6",
    certificates: 3,
    keys: 2,
    apps: ["app-1", "app-4"],
    appIds: ["123345", "456789"],
    vulnerabilities: { critical: 0, high: 1, medium: 3, low: 2 },
    environment: "production",
    isExpired: false,
    region: "us-east-1",
    lastUpdated: "2023-05-01T11:45:00Z",
  },
  {
    id: "host-3",
    name: "analytics-server",
    hostname: "analytics.example.com",
    type: sourceTypes.K8S,
    sourceType: "K8S",
    platform: "Kubernetes",
    os: "Debian 11",
    ip: "10.0.2.10",
    certificates: 2,
    keys: 5,
    apps: ["app-3"],
    appIds: ["345678"],
    vulnerabilities: { critical: 2, high: 1, medium: 0, low: 3 },
    environment: "production",
    isExpired: false,
    region: "us-west-2",
    lastUpdated: "2023-05-02T09:15:00Z",
  },
  {
    id: "host-4",
    name: "app-container-01",
    hostname: "app-container-01.example.com",
    type: sourceTypes.CF,
    sourceType: "CF",
    platform: "Cloud Foundry",
    os: "Alpine Linux 3.15",
    ip: "10.0.3.15",
    certificates: 1,
    keys: 4,
    apps: ["app-2", "app-5"],
    appIds: ["234567", "567890"],
    vulnerabilities: { critical: 0, high: 0, medium: 2, low: 1 },
    environment: "staging",
    isExpired: false,
    region: "eu-west-1",
    lastUpdated: "2023-05-02T14:30:00Z",
  },
  {
    id: "host-5",
    name: "db-server-01",
    hostname: "db-server-01.example.com",
    type: sourceTypes.VM,
    sourceType: "VM",
    platform: "VMware",
    os: "RHEL 8",
    ip: "10.0.1.8",
    certificates: 2,
    keys: 1,
    apps: ["app-1", "app-5"],
    appIds: ["123345", "567890"],
    vulnerabilities: { critical: 0, high: 1, medium: 1, low: 2 },
    environment: "production",
    isExpired: false,
    region: "us-east-1",
    lastUpdated: "2023-05-03T08:45:00Z",
  },
  {
    id: "host-6",
    name: "lambda-auth-service",
    hostname: "N/A",
    type: sourceTypes.AWS,
    sourceType: "AWS",
    platform: "AWS Lambda",
    os: "Amazon Linux 2",
    ip: "N/A",
    certificates: 1,
    keys: 3,
    apps: ["app-2"],
    appIds: ["234567"],
    vulnerabilities: { critical: 0, high: 1, medium: 2, low: 1 },
    environment: "production",
    isExpired: false,
    region: "us-east-1",
    lastUpdated: "2023-05-03T10:15:00Z",
  },
  {
    id: "host-7",
    name: "gcp-function-analytics",
    hostname: "N/A",
    type: sourceTypes.GCP,
    sourceType: "GCP",
    platform: "Google Cloud Functions",
    os: "N/A",
    ip: "N/A",
    certificates: 1,
    keys: 2,
    apps: ["app-3"],
    appIds: ["345678"],
    vulnerabilities: { critical: 0, high: 0, medium: 1, low: 2 },
    environment: "production",
    isExpired: false,
    region: "us-central1",
    lastUpdated: "2023-05-03T11:30:00Z",
  },
  {
    id: "host-8",
    name: "azure-app-service",
    hostname: "customer-portal.azurewebsites.net",
    type: sourceTypes.AZURE,
    sourceType: "AZURE",
    platform: "Azure App Service",
    os: "N/A",
    ip: "N/A",
    certificates: 2,
    keys: 1,
    apps: ["app-6"],
    appIds: ["678901"],
    vulnerabilities: { critical: 0, high: 0, medium: 1, low: 1 },
    environment: "production",
    isExpired: false,
    region: "eastus",
    lastUpdated: "2023-05-03T13:45:00Z",
  },
  {
    id: "host-9",
    name: "payment-api-gateway",
    hostname: "api.payment.example.com",
    type: sourceTypes.API,
    sourceType: "API",
    platform: "API Gateway",
    os: "N/A",
    ip: "N/A",
    certificates: 1,
    keys: 2,
    apps: ["app-1"],
    appIds: ["123345"],
    vulnerabilities: { critical: 0, high: 1, medium: 0, low: 0 },
    environment: "production",
    isExpired: false,
    region: "global",
    lastUpdated: "2023-05-03T15:00:00Z",
  },
  {
    id: "host-10",
    name: "custom-legacy-system",
    hostname: "legacy.example.com",
    type: sourceTypes.CUSTOM,
    sourceType: "CUSTOM",
    platform: "Custom Mainframe",
    os: "Proprietary",
    ip: "10.0.5.20",
    certificates: 3,
    keys: 4,
    apps: ["app-4", "app-5"],
    appIds: ["456789", "567890"],
    vulnerabilities: { critical: 1, high: 2, medium: 3, low: 4 },
    environment: "production",
    isExpired: false,
    region: "on-premise",
    lastUpdated: "2023-05-03T16:15:00Z",
  },
]

// Certificates
export const certificates = [
  {
    id: "cert-1",
    name: "api.example.com",
    host: "prod-api-01",
    hostId: "host-1",
    issuer: "DigiCert",
    subject: "api.example.com",
    validFrom: "2023-01-15",
    validTo: "2023-06-15",
    expiryDate: "2023-06-15",
    status: "expiring",
    applications: ["app-1", "app-2"],
    appIds: ["123345", "234567"],
    hosts: ["host-1"],
    isExpired: false,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "0a:1b:2c:3d:4e:5f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-2",
    name: "web.example.com",
    host: "prod-web-01",
    hostId: "host-2",
    issuer: "Let's Encrypt",
    subject: "web.example.com",
    validFrom: "2023-05-22",
    validTo: "2023-11-22",
    expiryDate: "2023-11-22",
    status: "valid",
    applications: ["app-4"],
    appIds: ["456789"],
    hosts: ["host-2"],
    isExpired: false,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "1a:2b:3c:4d:5e:6f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-3",
    name: "auth.example.com",
    host: "prod-api-01",
    hostId: "host-1",
    issuer: "DigiCert",
    subject: "auth.example.com",
    validFrom: "2022-11-10",
    validTo: "2023-05-01",
    expiryDate: "2023-05-01",
    status: "expired",
    applications: ["app-2"],
    appIds: ["234567"],
    hosts: ["host-1"],
    isExpired: true,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "2a:3b:4c:5d:6e:7f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-4",
    name: "cms.example.com",
    host: "prod-web-01",
    hostId: "host-2",
    issuer: "GeoTrust",
    subject: "cms.example.com",
    validFrom: "2023-03-15",
    validTo: "2024-03-15",
    expiryDate: "2024-03-15",
    status: "valid",
    applications: ["app-4"],
    appIds: ["456789"],
    hosts: ["host-2"],
    isExpired: false,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "3a:4b:5c:6d:7e:8f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-5",
    name: "data.example.com",
    host: "analytics-server",
    hostId: "host-3",
    issuer: "Let's Encrypt",
    subject: "data.example.com",
    validFrom: "2023-02-01",
    validTo: "2023-05-01",
    expiryDate: "2023-05-01",
    status: "expired",
    applications: ["app-3"],
    appIds: ["345678"],
    hosts: ["host-3"],
    isExpired: true,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "4a:5b:6c:7d:8e:9f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-6",
    name: "payment-api.example.com",
    host: "payment-api-gateway",
    hostId: "host-9",
    issuer: "DigiCert",
    subject: "payment-api.example.com",
    validFrom: "2023-04-10",
    validTo: "2024-04-10",
    expiryDate: "2024-04-10",
    status: "valid",
    applications: ["app-1"],
    appIds: ["123345"],
    hosts: ["host-9"],
    isExpired: false,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "5a:6b:7c:8d:9e:0f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-7",
    name: "lambda-auth.example.com",
    host: "lambda-auth-service",
    hostId: "host-6",
    issuer: "Amazon",
    subject: "lambda-auth.example.com",
    validFrom: "2023-03-01",
    validTo: "2024-03-01",
    expiryDate: "2024-03-01",
    status: "valid",
    applications: ["app-2"],
    appIds: ["234567"],
    hosts: ["host-6"],
    isExpired: false,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "6a:7b:8c:9d:0e:1f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-8",
    name: "customer-portal.azurewebsites.net",
    host: "azure-app-service",
    hostId: "host-8",
    issuer: "Microsoft IT",
    subject: "customer-portal.azurewebsites.net",
    validFrom: "2023-02-15",
    validTo: "2024-02-15",
    expiryDate: "2024-02-15",
    status: "valid",
    applications: ["app-6"],
    appIds: ["678901"],
    hosts: ["host-8"],
    isExpired: false,
    keySize: 2048,
    algorithm: "RSA",
    serialNumber: "7a:8b:9c:0d:1e:2f",
    selfSigned: false,
    usedFor: "TLS/SSL",
  },
  {
    id: "cert-9",
    name: "legacy.example.com",
    host: "custom-legacy-system",
    hostId: "host-10",
    issuer: "Internal CA",
    subject: "legacy.example.com",
    validFrom: "2022-06-01",
    validTo: "2023-06-01",
    expiryDate: "2023-06-01",
    status: "expiring",
    applications: ["app-4", "app-5"],
    appIds: ["456789", "567890"],
    hosts: ["host-10"],
    isExpired: false,
    keySize: 1024,
    algorithm: "RSA",
    serialNumber: "8a:9b:0c:1d:2e:3f",
    selfSigned: true,
    usedFor: "TLS/SSL",
  },
]

// Libraries
export const libraries = [
  {
    id: "lib-1",
    name: "OpenSSL",
    type: "cryptographic",
    version: "1.0.2k",
    latest_version: "3.1.0",
    language: "C",
    usage: "TLS/SSL implementation",
    vulnerabilities: 4,
    apps_using: ["app-1", "app-3", "app-5"],
    appIds: ["123345", "345678", "567890"],
    hosts: ["host-1", "host-3", "host-5", "host-10"],
    license: "Apache-2.0",
    lastUpdated: "2022-12-15",
    size: "2.3MB",
    dependencies: 5,
  },
  {
    id: "lib-2",
    name: "BouncyCastle",
    type: "cryptographic",
    version: "1.68",
    latest_version: "1.70",
    language: "Java",
    usage: "Cryptographic operations",
    vulnerabilities: 2,
    apps_using: ["app-2", "app-4"],
    appIds: ["234567", "456789"],
    hosts: ["host-1", "host-2", "host-6"],
    license: "MIT",
    lastUpdated: "2023-01-10",
    size: "3.1MB",
    dependencies: 2,
  },
  {
    id: "lib-3",
    name: "PyCA/cryptography",
    type: "cryptographic",
    version: "3.4.6",
    latest_version: "39.0.1",
    language: "Python",
    usage: "Cryptography for Python applications",
    vulnerabilities: 1,
    apps_using: ["app-3", "app-6"],
    appIds: ["345678", "678901"],
    hosts: ["host-3", "host-7", "host-8"],
    license: "Apache-2.0 OR BSD-3-Clause",
    lastUpdated: "2023-02-05",
    size: "1.8MB",
    dependencies: 3,
  },
  {
    id: "lib-4",
    name: "Node-Forge",
    type: "cryptographic",
    version: "0.10.0",
    latest_version: "1.3.1",
    language: "JavaScript",
    usage: "JavaScript cryptography implementation",
    vulnerabilities: 3,
    apps_using: ["app-1", "app-4", "app-6"],
    appIds: ["123345", "456789", "678901"],
    hosts: ["host-2", "host-8", "host-9"],
    license: "BSD-3-Clause",
    lastUpdated: "2023-01-20",
    size: "1.2MB",
    dependencies: 0,
  },
  {
    id: "lib-5",
    name: "WolfSSL",
    type: "cryptographic",
    version: "4.7.0",
    latest_version: "5.5.3",
    language: "C",
    usage: "Embedded SSL/TLS library",
    vulnerabilities: 0,
    apps_using: ["app-5"],
    appIds: ["567890"],
    hosts: ["host-4", "host-5"],
    license: "GPL-2.0",
    lastUpdated: "2023-03-01",
    size: "1.5MB",
    dependencies: 1,
  },
  {
    id: "lib-6",
    name: "AWS SDK Crypto",
    type: "cryptographic",
    version: "2.1.0",
    latest_version: "2.1.5",
    language: "JavaScript",
    usage: "AWS cryptographic operations",
    vulnerabilities: 1,
    apps_using: ["app-1", "app-2"],
    appIds: ["123345", "234567"],
    hosts: ["host-6", "host-9"],
    license: "Apache-2.0",
    lastUpdated: "2023-02-15",
    size: "0.8MB",
    dependencies: 2,
  },
  {
    id: "lib-7",
    name: "Azure Key Vault SDK",
    type: "cryptographic",
    version: "4.3.0",
    latest_version: "4.5.1",
    language: "C#",
    usage: "Azure Key Vault integration",
    vulnerabilities: 0,
    apps_using: ["app-6"],
    appIds: ["678901"],
    hosts: ["host-8"],
    license: "MIT",
    lastUpdated: "2023-03-10",
    size: "1.1MB",
    dependencies: 3,
  },
]

// Programming Languages
export const languages = [
  {
    id: "lang-1",
    name: "Java",
    version: "11",
    apps_using: ["app-2", "app-4"],
    appIds: ["234567", "456789"],
    hosts: ["host-1", "host-2", "host-6"],
  },
  {
    id: "lang-2",
    name: "Python",
    version: "3.9",
    apps_using: ["app-3", "app-6"],
    appIds: ["345678", "678901"],
    hosts: ["host-3", "host-7", "host-8"],
  },
  {
    id: "lang-3",
    name: "JavaScript",
    version: "ES2021",
    apps_using: ["app-1", "app-4", "app-6"],
    appIds: ["123345", "456789", "678901"],
    hosts: ["host-2", "host-6", "host-8", "host-9"],
  },
  {
    id: "lang-4",
    name: "C++",
    version: "C++17",
    apps_using: ["app-5"],
    appIds: ["567890"],
    hosts: ["host-4", "host-5", "host-10"],
  },
  {
    id: "lang-5",
    name: "C#",
    version: "10.0",
    apps_using: ["app-6"],
    appIds: ["678901"],
    hosts: ["host-8"],
  },
]

// Vulnerabilities
export const vulnerabilities = [
  {
    id: "vuln-1",
    name: "Expired Certificate",
    description: "SSL certificate has expired on the production server",
    severity: "critical",
    affected_apps: ["app-1", "app-3"],
    affected_appIds: ["123345", "345678"],
    status: "open",
    detected: "2023-04-28T13:45:00Z",
    recommendation:
      "Renew the SSL certificate immediately and implement automated monitoring for certificate expiration",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 8.5,
    remediation: "Certificate renewal",
    affectedHosts: ["host-1", "host-3"],
  },
  {
    id: "vuln-2",
    name: "Weak Encryption Algorithm",
    description: "MD5 hashing algorithm detected in password storage",
    severity: "high",
    affected_apps: ["app-2", "app-6"],
    affected_appIds: ["234567", "678901"],
    status: "open",
    detected: "2023-04-29T09:30:00Z",
    recommendation: "Replace MD5 with bcrypt or Argon2 for password hashing and migrate existing passwords",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 7.2,
    remediation: "Algorithm upgrade",
    affectedHosts: ["host-1", "host-6", "host-8"],
  },
  {
    id: "vuln-3",
    name: "Hardcoded API Keys",
    description: "API keys found hardcoded in application source code",
    severity: "high",
    affected_apps: ["app-1", "app-4"],
    affected_appIds: ["123345", "456789"],
    status: "in_progress",
    detected: "2023-04-30T16:20:00Z",
    recommendation: "Move all API keys to environment variables or a secure vault and rotate compromised keys",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 6.8,
    remediation: "Secret management",
    affectedHosts: ["host-2", "host-9"],
  },
  {
    id: "vuln-4",
    name: "Insecure Random Number Generation",
    description: "Non-cryptographically secure random number generator used for session tokens",
    severity: "medium",
    affected_apps: ["app-2", "app-5"],
    affected_appIds: ["234567", "567890"],
    status: "open",
    detected: "2023-05-01T10:15:00Z",
    recommendation: "Replace with cryptographically secure random number generation functions like SecureRandom",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 5.4,
    remediation: "Code refactoring",
    affectedHosts: ["host-1", "host-4", "host-5"],
  },
  {
    id: "vuln-5",
    name: "Missing Certificate Validation",
    description: "TLS certificate validation disabled in API client",
    severity: "high",
    affected_apps: ["app-3", "app-5"],
    affected_appIds: ["345678", "567890"],
    status: "open",
    detected: "2023-05-02T14:50:00Z",
    recommendation: "Enable proper certificate validation and implement certificate pinning where appropriate",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 7.5,
    remediation: "Configuration update",
    affectedHosts: ["host-3", "host-5", "host-7"],
  },
  {
    id: "vuln-6",
    name: "Outdated Cryptographic Library",
    description: "Using an outdated version of OpenSSL with known vulnerabilities",
    severity: "critical",
    affected_apps: ["app-1", "app-3", "app-5"],
    affected_appIds: ["123345", "345678", "567890"],
    status: "in_progress",
    detected: "2023-05-01T11:40:00Z",
    recommendation: "Update OpenSSL to the latest version and implement a dependency management policy",
    affectedLibraries: ["lib-1"],
    cve: "CVE-2022-0778",
    cvssScore: 9.1,
    remediation: "Library update",
    affectedHosts: ["host-1", "host-3", "host-5", "host-10"],
  },
  {
    id: "vuln-7",
    name: "Weak SSL/TLS Configuration",
    description: "Server configured to use outdated TLS protocols and cipher suites",
    severity: "high",
    affected_apps: ["app-4", "app-6"],
    affected_appIds: ["456789", "678901"],
    status: "open",
    detected: "2023-05-03T09:20:00Z",
    recommendation: "Disable TLS 1.0/1.1 and weak cipher suites, enable only strong ciphers and TLS 1.2+",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 7.4,
    remediation: "Configuration update",
    affectedHosts: ["host-2", "host-8", "host-10"],
  },
  {
    id: "vuln-8",
    name: "Insufficient Key Length",
    description: "RSA keys with insufficient key length (1024 bits) detected",
    severity: "medium",
    affected_apps: ["app-4", "app-5"],
    affected_appIds: ["456789", "567890"],
    status: "open",
    detected: "2023-05-03T11:15:00Z",
    recommendation: "Generate new keys with at least 2048 bits length and update all certificates",
    affectedLibraries: [],
    cve: "N/A",
    cvssScore: 5.9,
    remediation: "Key rotation",
    affectedHosts: ["host-10"],
  },
]

// Code Anti-patterns
export const antiPatterns = [
  {
    id: "ap-1",
    name: "Hardcoded Credentials",
    description: "Credentials hardcoded in source code",
    severity: "high",
    affected_apps: ["app-1", "app-4"],
    affected_appIds: ["123345", "456789"],
    languages: ["JavaScript", "Java"],
    recommendation: "Use environment variables or secure vaults for credential storage",
    affectedHosts: ["host-2", "host-9"],
  },
  {
    id: "ap-2",
    name: "Insecure Deserialization",
    description: "Unsafe deserialization of user-controlled data",
    severity: "critical",
    affected_apps: ["app-2", "app-3"],
    affected_appIds: ["234567", "345678"],
    languages: ["Java", "Python"],
    recommendation: "Implement input validation and use safe deserialization libraries",
    affectedHosts: ["host-1", "host-3"],
  },
  {
    id: "ap-3",
    name: "SQL Injection",
    description: "Unsanitized user input used in SQL queries",
    severity: "critical",
    affected_apps: ["app-4", "app-5"],
    affected_appIds: ["456789", "567890"],
    languages: ["Java", "C++"],
    recommendation: "Use parameterized queries or ORM frameworks",
    affectedHosts: ["host-2", "host-5", "host-10"],
  },
  {
    id: "ap-4",
    name: "Insecure Direct Object References",
    description: "Direct references to internal objects without access control",
    severity: "high",
    affected_apps: ["app-6"],
    affected_appIds: ["678901"],
    languages: ["C#", "JavaScript"],
    recommendation: "Implement proper access control and use indirect references",
    affectedHosts: ["host-8"],
  },
  {
    id: "ap-5",
    name: "Insufficient Logging",
    description: "Inadequate logging of security events",
    severity: "medium",
    affected_apps: ["app-1", "app-2", "app-3", "app-4", "app-5", "app-6"],
    affected_appIds: ["123345", "234567", "345678", "456789", "567890", "678901"],
    languages: ["Java", "Python", "JavaScript", "C++", "C#"],
    recommendation: "Implement comprehensive logging for security events",
    affectedHosts: [
      "host-1",
      "host-2",
      "host-3",
      "host-4",
      "host-5",
      "host-6",
      "host-7",
      "host-8",
      "host-9",
      "host-10",
    ],
  },
]

// Helper functions
export function getLOB(id: string) {
  return linesOfBusiness.find((lob) => lob.id === id)
}

export function getApp(id: string) {
  return apps.find((app) => app.id === id)
}

export function getAppByAppId(appId: string) {
  return apps.find((app) => app.appId === appId)
}

export function getAppsForLOB(lobId: string) {
  return apps.filter((app) => app.lobId === lobId)
}

export function getHost(id: string) {
  return hosts.find((host) => host.id === id)
}

export function getHostsForApp(appId: string) {
  return hosts.filter((host) => host.appIds && host.appIds.includes(appId))
}

export function getHostsForAppId(id: string) {
  return hosts.filter((host) => host.apps && host.apps.includes(id))
}

export function getCertificate(id: string) {
  return certificates.find((cert) => cert.id === id)
}

export function getCertificatesForApp(appId: string) {
  return certificates.filter((cert) => cert.appIds && cert.appIds.includes(appId))
}

export function getCertificatesForAppId(id: string) {
  return certificates.filter((cert) => cert.applications && cert.applications.includes(id))
}

export function getCertificatesForHost(hostId: string) {
  return certificates.filter((cert) => cert.hosts && cert.hosts.includes(hostId))
}

export function getLibrary(id: string) {
  return libraries.find((lib) => lib.id === id)
}

export function getLibrariesForApp(appId: string) {
  return libraries.filter((lib) => lib.appIds && lib.appIds.includes(appId))
}

export function getLibrariesForAppId(id: string) {
  return libraries.filter((lib) => lib.apps_using && lib.apps_using.includes(id))
}

export function getVulnerability(id: string) {
  return vulnerabilities.find((vuln) => vuln.id === id)
}

export function getVulnerabilitiesForApp(appId: string) {
  return vulnerabilities.filter((vuln) => vuln.affected_appIds && vuln.affected_appIds.includes(appId))
}

export function getVulnerabilitiesForAppId(id: string) {
  return vulnerabilities.filter((vuln) => vuln.affected_apps && vuln.affected_apps.includes(id))
}

export function getAntiPatternsForApp(appId: string) {
  return antiPatterns.filter((ap) => ap.affected_appIds && ap.affected_appIds.includes(appId))
}

export function getAntiPatternsForAppId(id: string) {
  return antiPatterns.filter((ap) => ap.affected_apps && ap.affected_apps.includes(id))
}

export function getLanguagesForApp(appId: string) {
  return languages.filter((lang) => lang.appIds && lang.appIds.includes(appId))
}

export function getLanguagesForAppId(id: string) {
  return languages.filter((lang) => lang.apps_using && lang.apps_using.includes(id))
}

export function getAppVulnerabilities(appId: string) {
  return vulnerabilities.filter((vuln) => vuln.affected_apps.includes(appId))
}

export function getAppLibraries(appId: string) {
  return libraries.filter((lib) => lib.apps_using.includes(appId))
}

export function getAppHosts(appId: string) {
  return hosts.filter((host) => host.apps.includes(appId))
}
